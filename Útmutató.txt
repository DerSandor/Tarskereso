Fatal Love - Részletes Telepítési Útmutató Kezdőknek 

1. Szükséges programok telepítése:
   a) Python telepítése(2 opció):
   1. Opció(Nehezebb):
      - Látogass el a https://www.python.org/downloads/ oldalra 
      - Töltsd le a Python 3.12 vagy újabb verziót
      - A telepítőben mindenképp jelöld be: "Add python.exe to PATH"
      - Customize installation-t válazd és az Advanced Options alatt jelöld be ezeket:
         "Install ... for all users"
         "Add Python to environment variables"
         "Create shortcuts for installed applications"
      - Ellenőrzés: Nyiss egy parancssort és írd be: python --version

   2. Opció(Egyszerűbb):
      - Vagy Microsoft Store-ban keress a:"Python"-ra (a 3.12 és 3.13-as verziókal működik) és csak Telepíteni kell 
      de ,ha a a másik opcióval már próbálkoztál ezeket a parancsokat újra ki kell adni:
      - python -m venv venv 
      - pip install -r requirements.txt
      - python manage.py runserver

   b) Node.js telepítése:
      - Látogass el a https://nodejs.org/ oldalra
      - Töltsd le az LTS (Long Term Support) verziót
      - Futtasd a telepítőt az alapértelmezett beállításokkal
      - Ellenőrzés: Nyiss egy parancssort és írd be: node --version

   c) Git telepítése:
      - Látogass el a https://git-scm.com/downloads oldalra
      - Windows: 64-bit Git for Windows Setup.
      - Töltsd le és telepítsd a Git-et
      - Ellenőrzés: Nyiss egy parancssort és írd be: git --version

2. Projekt letöltése:
   a) Nyiss egy parancssort (Windows: PowerShell vagy CMD)
   b) Navigálj oda, ahol tárolni szeretnéd a projektet (pl. cd Downloads)
   c) Másold be és futtasd:
      ```
      git clone <repository_url>
      cd Tarskereso
      python -m venv venv
      ```

3. Backend beállítása:
   a) Nyiss egy parancssort a backend mappában:
      ```
      cd backend
      ```
   
   b) Python csomagok telepítése:
      ```
      pip install -r requirements.txt
      ```
      - Várj, amíg minden csomag települ

   c) Adatbázis táblák létrehozása:
      ```
      python manage.py migrate
      ```

4. Frontend beállítása:
   a) Nyiss egy új parancssort
   b) Navigálj a frontend mappába:
      ```
      cd Tarskereso/frontend
      ```
   c) Telepítsd a szükséges csomagokat:
      ```
      npm install
      ```
   d) Készítsd el a production buildet:
      ```
      npm run build
      ```

5. Program indítása:
   a) Backend indítása:
      - A backend mappában:
      ```
      python manage.py collectstatic
      python manage.py runserver
      ```
      - Hagyd futni ezt a parancsablakot!

   b) Az alkalmazás elérése:
      - Nyisd meg a böngésződben: http://127.0.0.1:8000
      - Backend admin felület: http://127.0.0.1:8000/admin

6. Superuser létrehozása:
   - A backend mappában:
   ```
   python manage.py createsuperuser
   ```
   Példa:
   Email: admin@example.com
   Username: admin
   Password: Asd123456?
   Password (again): Asd123456?
   Superuser created successfully.  

7. Profilképek:
   - A profilképeket a backend\media\profile_pictures mappában tároljuk el (png és jpg formátumban, már más mappákból is lehet képet feltölteni).
   - A mappák automatikusan létrejönnek, amikor szükség van rájuk.

Gyakori hibák és megoldásaik:

1. "python nem található" hibaüzenet:
   - Telepítsd újra a Python-t
   - Jelöld be: "Add Python to PATH"
   - Indítsd újra a parancssort

2. "npm nem található" hibaüzenet:
   - Telepítsd újra a Node.js-t
   - Indítsd újra a parancssort

3. "Port already in use" hiba:
   - Zárd be az összes parancsablakot
   - Nyisd meg újra és indítsd el újra a szervert

4. Ha módosítod a frontend kódot:
   - Állítsd le a szervert
   - Navigálj a frontend mappába
   - Futtasd: npm run build
   - Navigálj vissza a backend mappába
   - Futtasd: python manage.py collectstatic
   - Indítsd újra a szervert: python manage.py runserver

Segítség kérése:
- Ha hibába ütközöl, készíts képernyőképet a hibaüzenetről
- Másold ki a hibaüzenetet
- Keresd meg a fejlesztőket a [projekt GitHub oldalán] 